name: Build test and quality checks
on: push
jobs:
  Actions:
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-20.04
    steps:
    - name: Deploy DietPi-Website locally
      id: deploy
      run: bash -c "$(curl -sSfL https://raw.githubusercontent.com/MichaIng/DietPi-Website${GITHUB_REF#refs/heads}/deploy.bash)" bash .
    - name: Setup JRE 15 for Nu Html Checker
      # https://github.com/actions/setup-java/releases
      uses: actions/setup-java@v1
      with:
        # http://static.azul.com/zulu/bin/
        java-version: '15'
        java-package: jre
    - name: Download Nu Html Checker
      run: |
        curl -sSfL "$(curl -sSfL https://api.github.com/repos/validator/validator/releases/latest | mawk -F\" '/\"browser_download_url.*vnu\.jar.*\.zip\"/{print $4}')" -o download.zip
        unzip -jo download.zip dist/vnu.jar
    - name: Run Nu Html Checker to check HTML, CSS and SVG files
      run: find . -type f \( -name '*.html' -o -name '*.css' -o -name '*.svg' \) -exec java -jar vnu.jar --verbose --also-check-css --also-check-svg --filterpattern '.*(text-decoration-skip-ink|color-adjust|overflow-anchor|break-word|aspect-ratio|html).*' {} +
    - name: Setup Python 3.9 for PySpelling
      id: python
      if: always() && steps.deploy.outcome == 'success'
      # https://github.com/actions/setup-python/releases
      uses: actions/setup-python@v2
      with:
        # https://github.com/actions/python-versions/releases
        python-version: '3.9'
    - name: Install PySpelling
      id: pyspelling
      if: always() && steps.python.outcome == 'success'
      run: |
        pip3 install -U pip setuptools wheel
        pip3 install -U pyspelling
        sudo apt-get -q update
        sudo apt-get -qq --no-install-recommends install aspell-en
    - name: Run PySpelling to check HTML files
      if: always() && steps.pyspelling.outcome == 'success'
      run: pyspelling -vc .spellcheck.yml
    - name: Setup Go 1.16 for liche
      id: go
      if: always() && steps.deploy.outcome == 'success'
      # https://github.com/actions/setup-go/releases
      uses: actions/setup-go@v2
      with:
        # https://github.com/actions/go-versions/releases
        go-version: '1.16'
    - name: Install liche
      id: liche
      if: always() && steps.go.outcome == 'success'
      run: GO111MODULE=on go get -u github.com/raviqqe/liche
    - name: Run liche to check HTML and Markdown files
      if: always() && steps.liche.outcome == 'success'
      run: liche -c 64 -x 'https://twitter.com' -d . -r .
